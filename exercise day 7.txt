show tables;

select * from Pieces;
select * from Providers;
select * from provides; 


-- 5.1
-- Select the name of all the pieces. 

SELECT name FROM pieces;

-- 5.2 
-- Select all the providers' data. 

SELECT * FROM providers;
 
-- 5.3
-- Obtain the average price of each piece (show only the piece code and the average price).

SELECT piece, AVG(price) FROM provides GROUP BY piece;

-- 5.4 
-- Obtain the names of all providers who supply piece 1.


/* Without subquery */
 
SELECT providers.name FROM providers INNER JOIN provides ON providers.code = provides.provider WHERE provides.piece = 1; 
             
/* With subquery */
 
SELECT name FROM providers WHERE code in (SELECT provider FROM provides WHERE piece = 1);

-- 5.5
-- Select the name of pieces provided by provider with code "HAL".

SELECT pieces.name FROM pieces INNER JOIN provides ON pieces.code = provides.piece WHERE provides.provider = 'HAL';

/* With EXISTS subquery */   
-- Interesting clause

SELECT * FROM pieces WHERE EXISTS (SELECT piece FROM provides WHERE pieces.code = piece AND provider = 'HAL');

-- 5.6
-- ---------------------------------------------
-- !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-- Intereting and important one.
-- For each piece, find the most expensive offering of that piece and include the piece name, provider name, and price 
-- (note that there could be two providers who supply the same piece at the most expensive price).

 SELECT pi.name, po.name, MAX(pr.price) FROM pieces pi, provides pr, providers po WHERE pi.code = pr.piece AND pr.provider = po.code GROUP BY pi.code;
 
-- 5.7
-- Add an entry to the database to indicate that "Skellington Supplies" (code "TNBC") will provide sprockets (code "1") for 7 cents each.

INSERT INTO provides VALUES(10, 1, 'TNB', 0.07);

-- 5.8
-- Increase all prices by one cent.

UPDATE provides SET price = (price + 0.01);

-- 5.9
-- Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply bolts (code 4).

DELETE FROM provides WHERE provider = 'RBT' and piece = 4;

-- 5.10
-- Update the database to reflect that "Susan Calvin Corp." (code "RBT") will not supply any pieces 
-- (the provider should still remain in the database).

DELETE FROM provides WHERE provider = 'RBT';